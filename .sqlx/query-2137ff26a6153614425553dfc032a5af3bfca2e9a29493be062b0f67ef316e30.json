{
  "db_name": "SQLite",
  "query": "\n            SELECT\n                id as \"id: i32\",\n                token,\n                page as \"page: i32\",\n                artist as \"artist!\",\n                image_id as \"image_id: i32\",\n                url,\n                score as \"score: f32\"\n            FROM (\n                -- 此处使用 group by 嵌套 random，因为默认情况下 group by 只会显示每组的第一个结果\n                SELECT * FROM (\n                    SELECT * FROM challenge_view\n                    WHERE score > 0.8 AND image_id NOT IN (\n                        -- 此处过滤掉出现在大于 5 个画廊中的图片，因为大概率是广告\n                        -- 还有第一页和最后一页\n                        -- 这个查询太耗时了，现在有基于二维码的过滤了，暂时禁用看一下效果\n                        -- SELECT image_id FROM page GROUP BY image_id HAVING COUNT(gallery_id) > 5\n                        -- UNION\n                        SELECT image_id FROM page GROUP BY gallery_id HAVING page = MAX(page)\n                        UNION\n                        SELECT image_id FROM page GROUP BY gallery_id HAVING page = 1\n                    ) ORDER BY random() LIMIT 500 -- 限制结果数量来提高速度，500 个结果一般能凑齐 4 个作者了\n                ) GROUP BY artist\n            ) ORDER BY random() LIMIT 4",
  "describe": {
    "columns": [
      {
        "name": "id: i32",
        "ordinal": 0,
        "type_info": "Int64"
      },
      {
        "name": "token",
        "ordinal": 1,
        "type_info": "Text"
      },
      {
        "name": "page: i32",
        "ordinal": 2,
        "type_info": "Int64"
      },
      {
        "name": "artist!",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "image_id: i32",
        "ordinal": 4,
        "type_info": "Int64"
      },
      {
        "name": "url",
        "ordinal": 5,
        "type_info": "Text"
      },
      {
        "name": "score: f32",
        "ordinal": 6,
        "type_info": "Float"
      }
    ],
    "parameters": {
      "Right": 0
    },
    "nullable": [
      false,
      false,
      false,
      null,
      false,
      false,
      false
    ]
  },
  "hash": "2137ff26a6153614425553dfc032a5af3bfca2e9a29493be062b0f67ef316e30"
}
